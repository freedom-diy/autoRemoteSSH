#!/bin/sh
#
# by frank.wang
# 
# git@github.com:freedom-diy/autoRemoteSSH.git
#


# Local forwarding port
localExPort=''

# VPN rsakeys path
vpnPath='/Users/{userName}/Applications/myLocalRsaKeysPath/'

# VPN RSA key
vpnKey='id_rsa'

# VPN IP4 address
vpnIP='192.168.0.1'

# VPN user name
vpnUser='frank.wang'

# VPN port
vpnPort='8090'

# Remote server rsakeys path
remotePath='/home/{userName}/.ssh/myRemoteRsaKeysPath/'

# Remote server IP4 address
remoteIP=''

# Remote server RSA key
remoteKey=''

# Remote server user name
remoteUser=''

# Output description
desc=''


# Command lind's help message
helpMsg="
    ssh_remote: params option \n
    usage: ssh_remote [--help] param_1 param_2 \n
    params descriptionï¼š \n
    param_1 abbreviation for remote server \n
    param_2 Local forwarding port \n
\n
    abbreviation list:{ \n
        [111 - development remote server] \n
        [222 - test remote server] \n
        [333 - product remote server] \n
    }\n
"

# Tips message
tipsMsg[0]='Require params! Please input: ssh_remote --help'
tipsMsg[1]='Connecting to remote server ...'
tipsMsg[2]='Connecting to '

if [ $# -eq '0' ]
    then
    echo "${tipsMsg[0]}"
    exit
elif [ $# -eq '2' ]
    then
    localExPort="-D $2"
else
    echo "${tipsMsg[1]}"
fi

if [[ $1 != *[^0-9]* ]]&&[[ $1 != 0* ]]
    then
    # Remote server's abbreviation mapping list | Need you config
    if [ $1 -eq '111' ]
      then
      desc='[development remote server]'
      remoteIP='192.168.0.111'
      remoteKey='id_rsa-192.168.0.111'
      remoteUser='user_dev'
    elif [ $1 -eq '222' ]
      then
      desc='[test remote server]'
      remoteIP='192.168.0.222'
      remoteKey='id_rsa-192.168.0.222'
      remoteUser='user_test'
    elif [ $1 -eq '333' ]
      then
      desc='[product remote server]'
      remoteIP='192.168.0.333'
      remoteKey='id_rsa-192.168.0.333'
      remoteUser='user_product'
    else
      echo "${tipsMsg[0]}"
      exit
    fi
else
    if [ $1 = "--help" ]
      then
      echo $helpMsg
      exit
    else
      echo "${tipsMsg[0]}"
      exit
    fi
fi


# Output custom description messages
echo "${tipsMsg[1]}${desc}"

# Excute SSH script for connecting to remote server
ssh -v ${localExPort} -t ${vpnUser}@${vpnIP} -p${vpnPort} -i ${vpnPath}${vpnKey} ssh ${remoteUser}@${remoteIP} -i ${remotePath}${remoteKey}


